[{"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\index.js":"1","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\App.js":"2","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\auth-api-service.js":"3","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\config.js":"4","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Contexts\\AuthContext.js":"5","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\TokenService.js":"6","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\item-api-service.js":"7","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\recipe-api-service.js":"8","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\LandingNav\\LandingNav.js":"9","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MainNav\\MainNav.js":"10","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\SignUp\\SignUp.js":"11","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\LandingMain\\LandingMain.js":"12","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\Login\\Login.js":"13","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyPantry\\MyPantry.js":"14","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\UserHomePage\\UserHomePage.js":"15","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\GetRecipe\\GetRecipes.js":"16","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyAccount\\MyAccount.js":"17","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyRecipes\\MyRecipes.js":"18","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\AddItem\\AddItem.js":"19","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Validator\\Validator.js":"20","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Recipe\\Recipe.js":"21","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\RecipesForm\\RecipesForm.js":"22","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\CategoryCard\\CategoryCard.js":"23","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\FavRecipe\\FavRecipe.js":"24","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Ingredients\\Ingredients.js":"25","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Item\\Item.js":"26","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\CategoryCard\\Icon.js":"27"},{"size":425,"mtime":1608573133212,"results":"28","hashOfConfig":"29"},{"size":2050,"mtime":1609774165139,"results":"30","hashOfConfig":"29"},{"size":1301,"mtime":1609774165311,"results":"31","hashOfConfig":"29"},{"size":148,"mtime":1608573133211,"results":"32","hashOfConfig":"29"},{"size":1544,"mtime":1609774165180,"results":"33","hashOfConfig":"29"},{"size":423,"mtime":1608573133205,"results":"34","hashOfConfig":"29"},{"size":1331,"mtime":1609769999703,"results":"35","hashOfConfig":"29"},{"size":1355,"mtime":1609696826144,"results":"36","hashOfConfig":"29"},{"size":631,"mtime":1609774165260,"results":"37","hashOfConfig":"29"},{"size":1839,"mtime":1609774165278,"results":"38","hashOfConfig":"29"},{"size":7468,"mtime":1609774165381,"results":"39","hashOfConfig":"29"},{"size":1610,"mtime":1609774165195,"results":"40","hashOfConfig":"29"},{"size":2496,"mtime":1609774165263,"results":"41","hashOfConfig":"29"},{"size":2106,"mtime":1609774165287,"results":"42","hashOfConfig":"29"},{"size":1064,"mtime":1609774165378,"results":"43","hashOfConfig":"29"},{"size":2236,"mtime":1609774165191,"results":"44","hashOfConfig":"29"},{"size":401,"mtime":1609774165284,"results":"45","hashOfConfig":"29"},{"size":1744,"mtime":1609774165291,"results":"46","hashOfConfig":"29"},{"size":2472,"mtime":1609774165144,"results":"47","hashOfConfig":"29"},{"size":193,"mtime":1609774165384,"results":"48","hashOfConfig":"29"},{"size":2542,"mtime":1609774165170,"results":"49","hashOfConfig":"29"},{"size":3970,"mtime":1609774165175,"results":"50","hashOfConfig":"29"},{"size":1232,"mtime":1609774165148,"results":"51","hashOfConfig":"29"},{"size":1927,"mtime":1609774165156,"results":"52","hashOfConfig":"29"},{"size":815,"mtime":1609774165161,"results":"53","hashOfConfig":"29"},{"size":769,"mtime":1609774165165,"results":"54","hashOfConfig":"29"},{"size":2074,"mtime":1609774165151,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"j7mwop",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\index.js",[],["115","116"],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\App.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\auth-api-service.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\config.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Contexts\\AuthContext.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\TokenService.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\item-api-service.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\recipe-api-service.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\LandingNav\\LandingNav.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MainNav\\MainNav.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\SignUp\\SignUp.js",["117","118"],"import React, { Component } from 'react';\r\nimport Validator from '../../Components/Validator/Validator';\r\nimport AuthApiService from '../../Services/auth-api-service';\r\nimport AuthContext from '../../Contexts/AuthContext';\r\nimport './SignUp.css';\r\nimport cooking from './cooking.jpg';\r\nimport eat from './eat.jpg';\r\n\r\nexport default class SignUp extends Component {\r\n  static contextType = AuthContext;\r\n\r\n  state = {\r\n    firstName: '',\r\n    firstNameValid: false,\r\n    lastName: '',\r\n    lastNameValid: false,\r\n    username: '',\r\n    usernameValid: false,\r\n    password: '',\r\n    passwordValid: false,\r\n    formValid: false,\r\n    error: '',\r\n    validationError: {},\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ error: null });\r\n    const { firstName, lastName, username, password } = this.state;\r\n    const newUser = { firstName, lastName, username, password };\r\n    try {\r\n      const savedUser = await AuthApiService.createUser(newUser);\r\n      // save authToken to local storage\r\n      this.context.login(savedUser.authToken);\r\n      delete savedUser.authToken;\r\n      // save user info to context\r\n      this.context.setCurrentUser(savedUser.user);\r\n      // set next route on submit\r\n      this.props.history.push(`/profile/${username}`);\r\n    } catch (err) {\r\n      this.setState({ error: err.message });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ error: null });\r\n  }\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState(\r\n      {\r\n        [name]: value,\r\n      },\r\n      name === 'password' ? this.validatePassword : null\r\n    );\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { firstNameValid, lastNameValid, usernameValid, passwordValid } = this.state;\r\n    this.setState({\r\n      formValid: firstNameValid && lastNameValid && usernameValid && passwordValid,\r\n    });\r\n  };\r\n\r\n  validateFirstName = () => {\r\n    let firstNameValid = true;\r\n    const validationError = { ...this.state.validationError };\r\n    const { firstName } = this.state;\r\n\r\n    if (firstName.startsWith(' ') || firstName.endsWith(' ')) {\r\n      firstNameValid = false;\r\n      validationError.firstName = 'Cannot begin or end with spaces.';\r\n    } else if (firstName.length < 2 || firstName.length > 20) {\r\n      firstNameValid = false;\r\n      validationError.firstName = 'Must be between 2 and 20 charachters.';\r\n    }\r\n\r\n    this.setState({ firstNameValid, validationError }, this.validateForm);\r\n  };\r\n\r\n  validateLastName = () => {\r\n    let lastNameValid = true;\r\n    const validationError = { ...this.state.validationError };\r\n    const { lastName } = this.state;\r\n\r\n    if (lastName.startsWith(' ') || lastName.endsWith(' ')) {\r\n      lastNameValid = false;\r\n      validationError.lastName = 'Cannot begin or end with spaces.';\r\n    } else if (lastName.length < 2 || lastName.length > 20) {\r\n      lastNameValid = false;\r\n      validationError.lastName = 'Must be between 2 and 20 charachters.';\r\n    }\r\n\r\n    this.setState({ lastNameValid, validationError }, this.validateForm);\r\n  };\r\n\r\n  validateUsername = () => {\r\n    let usernameValid = true;\r\n    const validationError = { ...this.state.validationError };\r\n    const { username } = this.state;\r\n\r\n    if (username.startsWith(' ') || username.endsWith(' ')) {\r\n      usernameValid = false;\r\n      validationError.username = 'Cannot begin or end with spaces.';\r\n    } else if (username.length < 4 || username.length > 25) {\r\n      usernameValid = false;\r\n      validationError.username = 'Must be between 4 and 25 charachters.';\r\n    }\r\n\r\n    this.setState({ usernameValid, validationError }, this.validateForm);\r\n  };\r\n\r\n  validatePassword = () => {\r\n    let passwordValid = true;\r\n    const validationError = { ...this.state.validationError };\r\n    const { password } = this.state;\r\n\r\n    if (password.startsWith(' ') || password.endsWith(' ')) {\r\n      passwordValid = false;\r\n      validationError.password = 'Cannot begin or end with spaces.';\r\n    } else if (password.length < 4) {\r\n      passwordValid = false;\r\n      validationError.password = 'Must be at least 4 charachters.';\r\n    }\r\n\r\n    this.setState({ passwordValid, validationError }, this.validateForm);\r\n  };\r\n\r\n  render() {\r\n    const { validationError, firstNameValid, lastNameValid, usernameValid, passwordValid, formValid } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <header role=\"banner\" className=\"signup-header\">\r\n          <h3>Let's get cooking.</h3>\r\n        </header>\r\n        <div className=\"signup\">\r\n          <form className=\"signup-form\" onSubmit={this.handleSubmit}>\r\n            <div>{this.state.error}</div>\r\n\r\n            <div className=\"signup-field\">\r\n              <label for=\"firstName\">First Name</label>\r\n              <input\r\n                placeholder=\"\"\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                className=\"signup-input\"\r\n                value={this.state.firstName}\r\n                onChange={this.handleChange}\r\n                onBlur={this.validateFirstName}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"validator\">\r\n              <Validator isValid={firstNameValid} msg={validationError.firstName} className=\"validator\" />\r\n            </div>\r\n\r\n            <div className=\"signup-field\">\r\n              <label for=\"lastName\">Last Name</label>\r\n              <input\r\n                placeholder=\"\"\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                id=\"lastName\"\r\n                className=\"signup-input\"\r\n                value={this.state.lastName}\r\n                onChange={this.handleChange}\r\n                onBlur={this.validateLastName}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"validator\">\r\n              <Validator isValid={lastNameValid} msg={validationError.lastName} className=\"validator\" />\r\n            </div>\r\n\r\n            <div className=\"signup-field\">\r\n              <label for=\"username\">Username</label>\r\n              <input\r\n                placeholder=\"\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                className=\"signup-input\"\r\n                id=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange}\r\n                onBlur={this.validateUsername}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"validator\">\r\n              <Validator isValid={usernameValid} msg={validationError.username} />\r\n            </div>\r\n\r\n            <div className=\"signup-field\">\r\n              <label for=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                className=\"signup-input\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                onBlur={this.validatePassword}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"validator\">\r\n              <Validator isValid={passwordValid} msg={validationError.password} />\r\n            </div>\r\n\r\n            <button disabled={!formValid} type=\"submit\" className=\"signup-button\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {/* <div className=\"signup-images\">\r\n          <img src={cooking} alt=\"cooking together\" />\r\n          <img src={eat} alt=\"dig in\" />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\LandingMain\\LandingMain.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\Login\\Login.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyPantry\\MyPantry.js",["119"],"import { React, Component } from 'react';\r\nimport AddItem from '../../Components/AddItem/AddItem';\r\nimport AuthContext from '../../Contexts/AuthContext';\r\nimport ItemApiService from '../../Services/item-api-service';\r\nimport CategoryCard from '../../Components/CategoryCard/CategoryCard';\r\nimport './MyPantry.css';\r\n\r\nexport default class MyPantry extends Component {\r\n  static contextType = AuthContext;\r\n  state = {\r\n    user: this.context.currentUser,\r\n    items: [],\r\n    categoryCards: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const userItems = await ItemApiService.items(this.state.user.id);\r\n    this.setState({});\r\n    const categories = {\r\n      Grain: 1,\r\n      Meat: 2,\r\n      Fish: 3,\r\n      Vegetable: 4,\r\n      Fruit: 5,\r\n      Seasoning: 6,\r\n      Sauce: 7,\r\n      Baking: 8,\r\n      Sweets: 9,\r\n      Misc: 10,\r\n    };\r\n\r\n    const categoryCards = [];\r\n\r\n    for (const [key, value] of Object.entries(categories)) {\r\n      const categoryItems = [];\r\n      userItems.map((item) => {\r\n        if (item.categoryId === value) {\r\n          item.category = key;\r\n          categoryItems.push(item);\r\n        }\r\n      });\r\n      categoryCards.push(categoryItems);\r\n    }\r\n    this.setState({\r\n      items: userItems,\r\n      categoryCards: categoryCards,\r\n    });\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    // updates to check category.length\r\n    this.componentDidMount();\r\n  };\r\n\r\n  addItem = () => {\r\n    this.componentDidMount();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main role=\"main\" className=\"pantry\">\r\n        <header className=\"pantry-header\">\r\n          <h2 className=\"user-first-name\">{this.state.user.firstName}'s Pantry</h2>\r\n        </header>\r\n        <AddItem addItem={this.addItem} />\r\n        <div>\r\n          <ul className=\"category-card\">\r\n            {this.state.categoryCards.map((category) =>\r\n              category.length === 0 ? null : (\r\n                <li>\r\n                  <CategoryCard category={category} deleteItem={this.deleteItem} />\r\n                </li>\r\n              )\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\UserHomePage\\UserHomePage.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\GetRecipe\\GetRecipes.js",["120"],"import { Component } from 'react';\r\nimport AuthContext from '../../Contexts/AuthContext';\r\nimport RecipesForm from '../../Components/RecipesForm/RecipesForm';\r\nimport ItemApiService from '../../Services/item-api-service';\r\nimport Recipe from '../../Components/Recipe/Recipe';\r\nimport './GetRecipe.css';\r\n\r\nexport default class GetRecipes extends Component {\r\n  static contextType = AuthContext;\r\n\r\n  state = {\r\n    user: this.context.currentUser,\r\n    recipes: [],\r\n    categoryCards: [],\r\n    mounted: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const userItems = await ItemApiService.items(this.state.user.id);\r\n    this.setState({});\r\n    const categories = {\r\n      Grain: 1,\r\n      Meat: 2,\r\n      Fish: 3,\r\n      Vegatable: 4,\r\n      Fruit: 5,\r\n      Seasoning: 6,\r\n      Sauce: 7,\r\n      Baking: 8,\r\n      Sweets: 9,\r\n      Misc: 10,\r\n    };\r\n\r\n    const categoryCards = [];\r\n\r\n    for (const [key, value] of Object.entries(categories)) {\r\n      const categoryItems = [];\r\n      userItems.map((item) => {\r\n        if (item.categoryId === value) {\r\n          item.category = key;\r\n          categoryItems.push(item);\r\n        }\r\n      });\r\n      categoryCards.push(categoryItems);\r\n    }\r\n    this.setState({\r\n      items: userItems,\r\n      categoryCards: categoryCards,\r\n      mounted: true,\r\n    });\r\n  }\r\n\r\n  setRecipes = async (recipes) => {\r\n    await this.setState({\r\n      recipes: recipes,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.mounted === false) {\r\n      return <div />;\r\n    }\r\n    return (\r\n      <div className=\"get-recipes\">\r\n        {this.state.items.length < 3 ? <h2>Add a few more items to your pantry!</h2> : null}\r\n        {this.state.categoryCards.length === 0 ? null : (\r\n          <div>\r\n            {/* <h2>Select items from your pantry</h2> */}\r\n            <RecipesForm categoryCards={this.state.categoryCards} setRecipes={this.setRecipes} />\r\n          </div>\r\n        )}\r\n\r\n        <ul className=\"recipes\">\r\n          {this.state.recipes.map((recipe) =>\r\n            recipe.length === 0 ? null : (\r\n              <li className=\"recipe\">\r\n                <Recipe recipe={recipe.recipe} />\r\n              </li>\r\n            )\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyAccount\\MyAccount.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyRecipes\\MyRecipes.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\AddItem\\AddItem.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Validator\\Validator.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Recipe\\Recipe.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\RecipesForm\\RecipesForm.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\CategoryCard\\CategoryCard.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\FavRecipe\\FavRecipe.js",["121"],"import { Component } from 'react';\r\nimport AuthContext from '../../Contexts/AuthContext';\r\nimport RecipeApiService from '../../Services/recipe-api-service';\r\nimport { AiOutlineStar } from 'react-icons/ai';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport './FavRecipe.css';\r\n\r\nexport default class FavRecipe extends Component {\r\n  static contextType = AuthContext;\r\n  state = {\r\n    user: this.context.currentUser,\r\n    recipeName: this.props.recipe.recipeName,\r\n    ingredients: this.props.recipe.ingredients.split('#%'),\r\n    id: this.props.recipe.id,\r\n    url: this.props.recipe.url,\r\n    img: this.props.recipe.img,\r\n    error: '',\r\n  };\r\n\r\n  handleClick = async (e) => {\r\n    e.preventDefault();\r\n    this.setState((prevState) => ({\r\n      error: null,\r\n    }));\r\n    try {\r\n      const userId = this.state.user.id;\r\n      const recipeId = this.state.id;\r\n      await RecipeApiService.deleteRecipe(userId, recipeId);\r\n      this.props.deleteRecipe(recipeId);\r\n    } catch (err) {\r\n      this.setState({ error: err.message });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"recipe-box\">\r\n        <div className=\"recipe-info\">\r\n          <h3 className=\"recipe-heading\">\r\n            <button type=\"submit\" className=\"favorite\" onClick={this.handleClick}>\r\n              <AiFillStar size={25} style={{ color: 'gold' }} />\r\n            </button>{' '}\r\n            <a href={this.state.url} target=\"_blank\" rel=\"noreferrer\" className=\"recipe-name\">\r\n              {this.state.recipeName}\r\n            </a>\r\n          </h3>\r\n          <div className=\"ingredients-header\">Ingredients:</div>\r\n          <ul>\r\n            {this.state.ingredients.map((ingredient) => (\r\n              <li className=\"recipe-ingredient\">{ingredient}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <img src={this.state.img} alt={this.state.recipeName} className=\"recipe-image\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Ingredients\\Ingredients.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Item\\Item.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\CategoryCard\\Icon.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":15},{"ruleId":"126","severity":1,"message":"130","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":11},{"ruleId":"131","severity":1,"message":"132","line":36,"column":28,"nodeType":"133","messageId":"134","endLine":36,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":38,"column":28,"nodeType":"133","messageId":"134","endLine":38,"endColumn":30},{"ruleId":"126","severity":1,"message":"135","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":23},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'cooking' is defined but never used.","Identifier","unusedVar","'eat' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'AiOutlineStar' is defined but never used.","no-global-assign","no-unsafe-negation"]