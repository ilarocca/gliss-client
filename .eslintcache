[{"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\index.js":"1","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\App.js":"2","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\auth-api-service.js":"3","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\config.js":"4","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Contexts\\AuthContext.js":"5","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\TokenService.js":"6","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\item-api-service.js":"7","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\recipe-api-service.js":"8","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\LandingNav\\LandingNav.js":"9","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\LandingMain\\LandingMain.js":"10","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MainNav\\MainNav.js":"11","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyPantry\\MyPantry.js":"12","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\SignUp\\SignUp.js":"13","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\Login\\Login.js":"14","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyAccount\\MyAccount.js":"15","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\UserHomePage\\UserHomePage.js":"16","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyRecipes\\MyRecipes.js":"17","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\GetRecipe\\GetRecipes.js":"18","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\CategoryCard\\CategoryCard.js":"19","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\AddItem\\AddItem.js":"20","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Validator\\Validator.js":"21","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Recipe\\Recipe.js":"22","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\RecipesForm\\RecipesForm.js":"23","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\FavRecipe\\FavRecipe.js":"24","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Item\\Item.js":"25","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Ingredients\\Ingredients.js":"26"},{"size":425,"mtime":1608573133212,"results":"27","hashOfConfig":"28"},{"size":2030,"mtime":1608934785811,"results":"29","hashOfConfig":"28"},{"size":1301,"mtime":1608952107742,"results":"30","hashOfConfig":"28"},{"size":148,"mtime":1608573133211,"results":"31","hashOfConfig":"28"},{"size":1544,"mtime":1608952743079,"results":"32","hashOfConfig":"28"},{"size":423,"mtime":1608573133205,"results":"33","hashOfConfig":"28"},{"size":1331,"mtime":1608573133208,"results":"34","hashOfConfig":"28"},{"size":1355,"mtime":1608573133209,"results":"35","hashOfConfig":"28"},{"size":410,"mtime":1608573133181,"results":"36","hashOfConfig":"28"},{"size":905,"mtime":1608573914527,"results":"37","hashOfConfig":"28"},{"size":1139,"mtime":1608652182114,"results":"38","hashOfConfig":"28"},{"size":2122,"mtime":1608850848710,"results":"39","hashOfConfig":"28"},{"size":6425,"mtime":1608676800711,"results":"40","hashOfConfig":"28"},{"size":2003,"mtime":1608676800713,"results":"41","hashOfConfig":"28"},{"size":293,"mtime":1608676609702,"results":"42","hashOfConfig":"28"},{"size":1064,"mtime":1608676800711,"results":"43","hashOfConfig":"28"},{"size":1492,"mtime":1608757101365,"results":"44","hashOfConfig":"28"},{"size":2141,"mtime":1608930327253,"results":"45","hashOfConfig":"28"},{"size":966,"mtime":1608850945379,"results":"46","hashOfConfig":"28"},{"size":2130,"mtime":1608952067843,"results":"47","hashOfConfig":"28"},{"size":193,"mtime":1608934744492,"results":"48","hashOfConfig":"28"},{"size":1815,"mtime":1608930322215,"results":"49","hashOfConfig":"28"},{"size":3821,"mtime":1608935746886,"results":"50","hashOfConfig":"28"},{"size":1351,"mtime":1608935746801,"results":"51","hashOfConfig":"28"},{"size":726,"mtime":1608930479975,"results":"52","hashOfConfig":"28"},{"size":591,"mtime":1608848581880,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"j7mwop",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\index.js",[],["112","113"],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\App.js",["114"],"import { Route } from 'react-router-dom';\nimport React from 'react';\nimport './App.css';\nimport LandingNav from './Routes/LandingNav/LandingNav';\nimport LandingMain from './Routes/LandingMain/LandingMain';\nimport SignUp from './Routes/SignUp/SignUp';\nimport Login from './Routes/Login/Login';\nimport MainNav from './Routes/MainNav/MainNav';\nimport UserHomePage from './Routes/UserHomePage/UserHomePage';\nimport MyPantry from './Routes/MyPantry/MyPantry';\nimport MyRecipes from './Routes/MyRecipes/MyRecipes';\nimport MyAccount from './Routes/MyAccount/MyAccount';\nimport GetRecipes from './Routes/GetRecipe/GetRecipes';\n\nclass App extends React.Component {\n  state = {\n    recipes: [],\n  };\n\n  setRecipes = async (recipes) => {\n    await this.setState({\n      recipes: recipes,\n    });\n  };\n\n  renderNavRoutes() {\n    return (\n      <React.Fragment>\n        <Route exact path={['/', '/signup', '/login']} component={LandingNav} />\n        <Route\n          path=\"/username\"\n          render={(props) => <MainNav {...props} setRecipes={this.setRecipes} recipes={this.state.recipes} />}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderMainRoutes() {\n    return (\n      <React.Fragment>\n        <Route exact path=\"/\" component={LandingMain} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/login\" component={Login} />\n        <Route exact path=\"/username\" render={(props) => <UserHomePage {...props} />} />\n        <Route\n          path=\"/username/get-recipes\"\n          render={(props) => <GetRecipes {...props} setRecipes={this.setRecipes} />}\n        />\n        <Route path=\"/username/my-recipes\" component={MyRecipes} />\n        <Route path=\"/username/my-account\" component={MyAccount} />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className=\"app-nav\">{this.renderNavRoutes()}</nav>\n        <main className=\"app-main\">{this.renderMainRoutes()}</main>\n\n        <footer>&#169;Gliss</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\auth-api-service.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\config.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Contexts\\AuthContext.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\TokenService.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\item-api-service.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Services\\recipe-api-service.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\LandingNav\\LandingNav.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\LandingMain\\LandingMain.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MainNav\\MainNav.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyPantry\\MyPantry.js",["115"],"import { React, Component } from 'react';\r\nimport AddItem from '../../Components/AddItem/AddItem';\r\nimport AuthContext from '../../Contexts/AuthContext';\r\nimport ItemApiService from '../../Services/item-api-service';\r\nimport CategoryCard from '../../Components/CategoryCard/CategoryCard';\r\nimport './MyPantry.css';\r\n\r\nexport default class MyPantry extends Component {\r\n  static contextType = AuthContext;\r\n  state = {\r\n    user: this.context.currentUser,\r\n    items: [],\r\n    categoryCards: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const userItems = await ItemApiService.items(this.state.user.id);\r\n    this.setState({\r\n      items: userItems,\r\n    });\r\n    console.log(userItems);\r\n    const categories = {\r\n      Grain: 1,\r\n      Meat: 2,\r\n      Fish: 3,\r\n      Vegatable: 4,\r\n      Fruit: 5,\r\n      Seasoning: 6,\r\n      Sauce: 7,\r\n      Baking: 8,\r\n      Sweets: 9,\r\n      Misc: 10,\r\n    };\r\n\r\n    const categoryCards = [];\r\n\r\n    for (const [key, value] of Object.entries(categories)) {\r\n      const categoryItems = [];\r\n      this.state.items.map((item) => {\r\n        if (item.categoryId === value) {\r\n          item.category = key;\r\n          categoryItems.push(item);\r\n        }\r\n      });\r\n      categoryCards.push(categoryItems);\r\n    }\r\n    console.log(categoryCards);\r\n    this.setState({\r\n      categoryCards: categoryCards,\r\n    });\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    // updates to check category.length\r\n    this.componentDidMount();\r\n  };\r\n\r\n  addItem = () => {\r\n    this.componentDidMount();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main role=\"main\">\r\n        <header role=\"banner\">\r\n          <h2>{this.state.user.firstName}'s Pantry</h2>\r\n        </header>\r\n        <AddItem addItem={this.addItem} />\r\n        <div>\r\n          <ul className=\"category-card\">\r\n            {this.state.categoryCards.map((category) =>\r\n              category.length === 0 ? null : (\r\n                <li>\r\n                  <CategoryCard category={category} deleteItem={this.deleteItem} />\r\n                </li>\r\n              )\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\SignUp\\SignUp.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\Login\\Login.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyAccount\\MyAccount.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\UserHomePage\\UserHomePage.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\MyRecipes\\MyRecipes.js",["116"],"import { Component } from 'react';\r\nimport RecipeApiService from '../../Services/recipe-api-service';\r\nimport AuthContext from '../../Contexts/AuthContext';\r\nimport FavRecipe from '../../Components/FavRecipe/FavRecipe';\r\n\r\nclass MyRecipes extends Component {\r\n  static contextType = AuthContext;\r\n\r\n  state = {\r\n    user: this.context.currentUser,\r\n    recipes: [],\r\n    error: '',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const userRecipes = await RecipeApiService.recipes(this.state.user.id);\r\n    this.setState({\r\n      recipes: userRecipes,\r\n    });\r\n  }\r\n\r\n  deleteRecipe = async (id) => {\r\n    //cause rerender to reflect deleted recipe\r\n    this.setState((prevState) => {\r\n      const newRecipes = prevState.recipes.filter((recipe) => recipe.id !== id);\r\n      return {\r\n        recipes: newRecipes,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // sort recipes by date added\r\n    const { recipes } = this.state;\r\n    const newItems = recipes.sort((a, b) => (a.dateCreated < b.dateCreated ? 1 : -1));\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>{this.state.user.firstName}'s Recipes</h2>\r\n        </div>\r\n\r\n        <ul>\r\n          {this.state.recipes === undefined\r\n            ? null\r\n            : this.state.recipes.map((recipe) => (\r\n                <li key={recipe}>\r\n                  <FavRecipe recipe={recipe} deleteRecipe={this.deleteRecipe} />\r\n                </li>\r\n              ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MyRecipes;\r\n","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Routes\\GetRecipe\\GetRecipes.js",["117"],"import { Component } from 'react';\r\nimport AuthContext from '../../Contexts/AuthContext';\r\nimport RecipesForm from '../../Components/RecipesForm/RecipesForm';\r\nimport ItemApiService from '../../Services/item-api-service';\r\nimport Recipe from '../../Components/Recipe/Recipe';\r\nimport './GetRecipe.css';\r\n\r\nexport default class GetRecipes extends Component {\r\n  static contextType = AuthContext;\r\n\r\n  state = {\r\n    user: this.context.currentUser,\r\n    recipes: [],\r\n    categoryCards: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const userItems = await ItemApiService.items(this.state.user.id);\r\n    this.setState({\r\n      items: userItems,\r\n    });\r\n    console.log(userItems);\r\n    const categories = {\r\n      Grain: 1,\r\n      Meat: 2,\r\n      Fish: 3,\r\n      Vegatable: 4,\r\n      Fruit: 5,\r\n      Seasoning: 6,\r\n      Sauce: 7,\r\n      Baking: 8,\r\n      Sweets: 9,\r\n      Misc: 10,\r\n    };\r\n\r\n    const categoryCards = [];\r\n\r\n    for (const [key, value] of Object.entries(categories)) {\r\n      const categoryItems = [];\r\n      this.state.items.map((item) => {\r\n        if (item.categoryId === value) {\r\n          item.category = key;\r\n          categoryItems.push(item);\r\n        }\r\n      });\r\n      categoryCards.push(categoryItems);\r\n    }\r\n    this.setState({\r\n      categoryCards: categoryCards,\r\n    });\r\n  }\r\n\r\n  setRecipes = async (recipes) => {\r\n    console.log(recipes);\r\n    await this.setState({\r\n      recipes: recipes,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.recipes);\r\n    return (\r\n      <div>\r\n        {this.state.categoryCards.length === 0 ? null : (\r\n          // <h2>Add some items to your pantry to get started!</h2>\r\n          <div>\r\n            {/* <h2>Select items from your pantry</h2> */}\r\n            <RecipesForm categoryCards={this.state.categoryCards} setRecipes={this.setRecipes} />\r\n          </div>\r\n        )}\r\n\r\n        <ul>\r\n          {this.state.recipes.map((recipe) =>\r\n            recipe.length === 0 ? null : (\r\n              <li>\r\n                <Recipe recipe={recipe.recipe} />\r\n              </li>\r\n            )\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\CategoryCard\\CategoryCard.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\AddItem\\AddItem.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Validator\\Validator.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Recipe\\Recipe.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\RecipesForm\\RecipesForm.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\FavRecipe\\FavRecipe.js",[],"C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Item\\Item.js",["118"],"import { React, Component } from 'react';\r\nimport ItemApiService from '../../Services/item-api-service';\r\n\r\nexport default class Item extends Component {\r\n  state = {\r\n    userId: this.props.item.userId,\r\n    itemId: this.props.item.id,\r\n  };\r\n\r\n  handleClickDelete = async (e) => {\r\n    e.preventDefault();\r\n    const { userId, itemId } = this.state;\r\n    await ItemApiService.deleteItem(userId, itemId);\r\n    this.props.deleteItem(itemId);\r\n  };\r\n\r\n  render() {\r\n    const { item, dateCreated } = this.props.item;\r\n    const date = new Date(dateCreated);\r\n    return (\r\n      <li>\r\n        {item}\r\n        <button type=\"button\" onClick={this.handleClickDelete}>\r\n          x\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Ivan\\Projects\\gliss-client\\src\\Components\\Ingredients\\Ingredients.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":39,"column":35,"nodeType":"129","messageId":"130","endLine":39,"endColumn":37},{"ruleId":"123","severity":1,"message":"131","line":35,"column":11,"nodeType":"125","messageId":"126","endLine":35,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":40,"column":35,"nodeType":"129","messageId":"130","endLine":40,"endColumn":37},{"ruleId":"123","severity":1,"message":"132","line":19,"column":11,"nodeType":"125","messageId":"126","endLine":19,"endColumn":15},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'MyPantry' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'newItems' is assigned a value but never used.","'date' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]